import { jsxs as J, Fragment as K, jsx as w } from "react/jsx-runtime";
import { useContext as N, useState as Q, useRef as f, useEffect as p } from "react";
import h from "../../utils/styleObjectToString.mjs";
import b from "../../utils/styleStringToObject.mjs";
import V from "../activity/ActivityContext.mjs";
import Z from "../navigation/NavigationContext.mjs";
import { NavigationStatus as k } from "../navigation/typing.mjs";
import A from "../transition/TransitionContext.mjs";
import { TransitionActionType as v } from "../transition/typing.mjs";
import tt from "../../hooks/useDebounceCallback.mjs";
function mt({ children: B, backgroundColor: F = "white" }) {
  const {
    state: { currentActivity: n, previousActivity: g, waitingActivity: i }
  } = N(V), {
    state: { status: G }
  } = N(Z), { dispatch: S } = N(A), [T, Y] = Q(
    [k.READY, k.REPLACE_DONE].includes(G) ? 0 : "100%"
  ), d = f(null), P = f(!1), E = f(!1), y = f(0), R = f(0), U = f(0), m = f(0), L = f(null), M = f(!0), O = f(null), $ = ({
    clientX: t,
    clientY: s,
    scrollTop: r,
    previousActivityElement: a
  }) => {
    if (n != null && n.animate && (m.current = 0, y.current = t, R.current = s, U.current = r, P.current = !0, a)) {
      const e = a.getAttribute("style"), o = b(e || "");
      o.transition = "none", o.transform = "translate3d(-100px, 0, 0)", a.setAttribute("style", h(o));
    }
  }, W = (t) => {
    var s;
    return $({
      clientX: t.clientX,
      clientY: t.clientY,
      scrollTop: t.currentTarget.scrollTop,
      previousActivityElement: ((s = t.currentTarget.parentElement) == null ? void 0 : s.previousElementSibling) || void 0
    });
  }, _ = (t) => {
    var s;
    return $({
      clientX: t.touches[0].clientX,
      clientY: t.touches[0].clientY,
      scrollTop: t.currentTarget.scrollTop,
      previousActivityElement: ((s = t.currentTarget.parentElement) == null ? void 0 : s.previousElementSibling) || void 0
    });
  }, j = tt(() => {
    E.current = !1;
  }, 300);
  return p(() => {
    var a;
    let t;
    const s = (a = d.current) == null ? void 0 : a.parentElement;
    return (s == null ? void 0 : s.getAttribute("data-active-path")) === (n == null ? void 0 : n.activePath) && (window.scrollContainer = d.current, d.current && (d.current.style.transition = n != null && n.animate ? "transform 0.3s" : "none"), t = setTimeout(
      () => {
        var o;
        const e = s == null ? void 0 : s.previousElementSibling;
        if (e) {
          e.lastElementChild && (e.lastElementChild.scrollTop = ((o = window.history.state) == null ? void 0 : o.scrollTop) || 0);
          const x = e.getAttribute("style"), c = b(x || "");
          c.transition = n != null && n.animate ? "transform 0.3s" : "none", c.transform = "translate3d(-100px, 0, 0)", e.setAttribute("style", h(c));
        }
        Y(0);
      },
      n != null && n.animate ? 50 : 0
    )), () => {
      t && clearTimeout(t);
    };
  }, [n == null ? void 0 : n.activePath, n == null ? void 0 : n.animate]), p(() => {
    var r;
    const t = (r = d.current) == null ? void 0 : r.parentElement;
    (t == null ? void 0 : t.getAttribute("data-active-path")) === (g == null ? void 0 : g.activePath) && Y(0);
  }, [g == null ? void 0 : g.activePath]), p(() => {
    var r;
    const t = (r = d.current) == null ? void 0 : r.parentElement;
    if ((t == null ? void 0 : t.getAttribute("data-active-path")) === (i == null ? void 0 : i.activePath) && !T) {
      const a = t == null ? void 0 : t.previousElementSibling;
      if (a) {
        const e = a.getAttribute("style"), o = b(e || "");
        o.transition = i != null && i.animate ? "transform 0.3s" : "none", o.transform = "translate3d(0, 0, 0)", a.setAttribute("style", h(o));
      }
      Y("100%");
    }
  }, [i == null ? void 0 : i.activePath, i == null ? void 0 : i.animate, T]), p(() => {
    const t = d.current, s = () => {
      E.current = !0;
    };
    return t == null || t.addEventListener("scroll", s), t == null || t.addEventListener("scroll", j), () => {
      t == null || t.removeEventListener("scroll", s), t == null || t.removeEventListener("scroll", j);
    };
  }, [j]), p(() => {
    const t = d.current, s = ({
      e,
      clientX: o,
      clientY: x,
      currentActivityElement: c
    }) => {
      var z;
      if (!P.current || E.current) return;
      const l = (z = c.parentElement) == null ? void 0 : z.previousElementSibling;
      m.current = o - y.current;
      const u = Math.abs(x - R.current), I = Math.abs(m.current);
      if (u > I || m.current < 0) {
        const C = l == null ? void 0 : l.getAttribute("style"), D = b(C || "");
        l == null || l.setAttribute("style", h(D)), c.style.transition = "transform 0.3s", c.style.transform = "translate3d(0, 0, 0)", m.current = 1, P.current = !1, S({
          type: v.DONE
        });
        return;
      }
      if (l) {
        S({
          type: v.PENDING
        });
        const C = I / window.innerWidth, D = Math.min(Math.max(C, 0), 1), q = Math.min(Math.max(C, 0), 1) * 100;
        L.current.style.transition = "none", L.current.style.opacity = `${1 - D}`;
        const H = l.getAttribute("style"), X = b(H || "");
        X.display = "block", X.transition = "none", X.transform = `translate3d(calc(-100px + ${q}px), 0, 0)`, l.setAttribute("style", h(X));
      }
      c.style.transition = "none", c.style.transform = `translate3d(${m.current}px, 0, 0)`, (e.target.id === "activity-bar" || e.cancelable) && e.preventDefault();
    }, r = (e) => s({
      e,
      clientX: e.clientX,
      clientY: e.clientY,
      currentActivityElement: e.currentTarget
    }), a = (e) => s({
      e,
      clientX: e.touches[0].clientX,
      clientY: e.touches[0].clientY,
      currentActivityElement: e.currentTarget
    });
    return t == null || t.addEventListener("mousemove", r), t == null || t.addEventListener("touchmove", a), () => {
      t == null || t.removeEventListener("mousemove", r), t == null || t.removeEventListener("touchmove", a);
    };
  }, [S]), p(() => {
    const t = d.current, s = ({ currentActivityElement: e }) => {
      var c;
      if (!(n != null && n.animate) || T) return;
      P.current = !1, M.current = !1;
      const o = (c = e.parentElement) == null ? void 0 : c.previousElementSibling, x = m.current >= 30;
      if (e.style.transition = "transform 0.3s", L.current.style.transition = "opacity 0.3s", x) {
        if (o) {
          const l = o.getAttribute("style"), u = b(l || "");
          u.transition = "transform 0.3s", u.transform = "translate3d(0, 0, 0)", o.setAttribute("style", h(u));
        }
        e.style.transform = "translate3d(100%, 0, 0)", window.history.back();
      } else {
        if (o) {
          const l = o.getAttribute("style"), u = b(l || "");
          u.transition = "transform 0.3s", u.transform = "translate3d(-100px, 0, 0)", o.setAttribute("style", h(u));
        }
        e.style.transform = "translate3d(0, 0, 0)";
      }
      O.current && clearTimeout(O.current), O.current = setTimeout(() => {
        M.current = !0, S({
          type: v.DONE
        });
      }, 50);
    }, r = (e) => s({
      currentActivityElement: e.currentTarget
    }), a = (e) => s({
      currentActivityElement: e.currentTarget
    });
    return t == null || t.addEventListener("mouseup", r), t == null || t.addEventListener("touchend", a), () => {
      t == null || t.removeEventListener("mouseup", r), t == null || t.removeEventListener("touchend", a);
    };
  }, [n == null ? void 0 : n.animate, S, T]), p(() => {
    const t = d.current, s = (r) => {
      !M.current && m.current >= 1 && r.stopPropagation();
    };
    return t == null || t.addEventListener("click", s), () => {
      t == null || t.removeEventListener("click", s);
    };
  }, []), /* @__PURE__ */ J(K, { children: [
    /* @__PURE__ */ w(
      "div",
      {
        id: "activity-bar",
        style: {
          position: "fixed",
          top: 0,
          left: 0,
          width: 10,
          height: "100%",
          zIndex: 0
        }
      }
    ),
    /* @__PURE__ */ w(
      "div",
      {
        ref: L,
        style: {
          position: "fixed",
          top: 0,
          left: 0,
          width: "100%",
          height: "100%",
          backgroundColor: "rgba(0, 0, 0, 0.3)",
          transition: "opacity 0.3s",
          opacity: n != null && n.animate && !T ? 1 : 0,
          pointerEvents: "none",
          zIndex: 0
        }
      }
    ),
    /* @__PURE__ */ w(
      "div",
      {
        ref: d,
        onMouseDown: W,
        onTouchStart: _,
        style: {
          width: "100%",
          height: "100%",
          transform: `translate3d(${T}, 0, 0)`,
          overflow: "auto",
          overscrollBehavior: "none",
          backgroundColor: F
        },
        children: B
      }
    )
  ] });
}
export {
  mt as default
};
