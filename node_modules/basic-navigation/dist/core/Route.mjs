import { jsx as d } from "react/jsx-runtime";
import { useContext as i, useRef as E } from "react";
import { Freeze as x } from "react-freeze";
import C from "./activity/ActivityContext.mjs";
import S from "./navigation/NavigationContext.mjs";
import { NavigationStatus as n } from "./navigation/typing.mjs";
import D from "./transition/TransitionContext.mjs";
import { TransitionStatus as g } from "./transition/typing.mjs";
function H({
  name: a,
  path: N,
  activePath: s,
  activity: p
}) {
  const {
    state: { currentActivity: t, previousActivity: o }
  } = i(C), {
    state: { status: e }
  } = i(S), {
    state: { status: h }
  } = i(D), l = E(null);
  if (((t == null ? void 0 : t.name) !== a || (t == null ? void 0 : t.activePath) !== s) && ((o == null ? void 0 : o.name) !== a || (o == null ? void 0 : o.activePath) !== s)) return null;
  const r = (t == null ? void 0 : t.name) === a && (t == null ? void 0 : t.activePath) === s, m = e === n.READY || e === n.PUSH_DONE || e === n.STACK_PUSH_DONE || e === n.REPLACE_DONE || e === n.BACK_DONE, f = !r && m && h === g.DONE;
  return /* @__PURE__ */ d(
    "div",
    {
      ref: l,
      "data-path": N,
      "data-active-path": s,
      style: {
        display: f ? "none" : void 0,
        position: "fixed",
        width: "100%",
        height: "100%",
        zIndex: r ? 1 : 0,
        pointerEvents: m ? void 0 : "none"
      },
      children: /* @__PURE__ */ d(x, { freeze: f, children: p })
    }
  );
}
export {
  H as default
};
