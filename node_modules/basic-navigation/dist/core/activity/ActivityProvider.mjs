import { jsx as v } from "react/jsx-runtime";
import { useReducer as d } from "react";
import { d as u } from "../vendor-BPaWSzH4.mjs";
import h from "../../utils/getActivities.mjs";
import l from "../../utils/getParams.mjs";
import e from "../../utils/isServer.mjs";
import x from "./ActivityContext.mjs";
import { activityReducer as y } from "./store.mjs";
function E({
  children: a,
  navigates: m,
  initPath: p
}) {
  const [s, c] = d(
    y,
    {
      activities: h(m)
    },
    ({ activities: i }) => {
      const r = e() ? p || "/" : window.location.pathname, n = e() ? r.split("?")[1] || "" : window.location.search, f = i.map(({ path: t }) => t), [o] = i.filter(({ path: t }) => u.pathToRegexp(t || "/").regexp.test(r)).map((t) => ({
        ...t,
        params: l(f, r, n),
        activePath: r
      }));
      return {
        activities: i,
        previousActivity: o,
        currentActivity: o
      };
    }
  );
  return /* @__PURE__ */ v(x.Provider, { value: { state: s, dispatch: c }, children: a });
}
export {
  E as default
};
